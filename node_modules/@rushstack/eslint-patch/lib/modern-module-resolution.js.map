{"version":3,"file":"modern-module-resolution.js","sourceRoot":"","sources":["../src/modern-module-resolution.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n// See LICENSE in the project root for license information.\r\n\r\n// This is a workaround for https://github.com/eslint/eslint/issues/3458\r\n//\r\n// To correct how ESLint searches for plugin packages, add this line to the top of your project's .eslintrc.js file:\r\n//\r\n//    require(\"@rushstack/eslint-patch/modern-module-resolution\");\r\n//\r\nconst path = require('path');\r\nconst fs = require('fs');\r\n\r\nlet currentModule = module;\r\nwhile (!/[\\\\/]eslint[\\\\/]lib[\\\\/]cli-engine[\\\\/]config-array-factory\\.js/i.test(currentModule.filename)) {\r\n  if (!currentModule.parent) {\r\n    // This was tested with ESLint 6.1.0; other versions may not work\r\n    throw new Error('Failed to patch ESLint because the calling module was not recognized');\r\n  }\r\n  currentModule = currentModule.parent;\r\n}\r\nconst eslintFolder = path.join(path.dirname(currentModule.filename), '../..');\r\n\r\n// Detect the ESLint package version\r\nconst eslintPackageJson = fs.readFileSync(path.join(eslintFolder, 'package.json')).toString();\r\nconst eslintPackageObject = JSON.parse(eslintPackageJson);\r\nconst eslintPackageVersion = eslintPackageObject.version;\r\nconst versionMatch = /^([0-9]+)\\./.exec(eslintPackageVersion); // parse the SemVer MAJOR part\r\nif (!versionMatch) {\r\n  throw new Error('Unable to parse ESLint version: ' + eslintPackageVersion);\r\n}\r\nconst eslintMajorVersion = Number(versionMatch[1]);\r\nif (!(eslintMajorVersion >= 6 && eslintMajorVersion <= 7)) {\r\n  throw new Error(\r\n    'The patch-eslint.js script has only been tested with ESLint version 6.x or 7.x. (Your version: ' +\r\n      eslintPackageVersion +\r\n      ')'\r\n  );\r\n}\r\n\r\nconst configArrayFactoryPath = path.join(eslintFolder, 'lib/cli-engine/config-array-factory');\r\nconst ConfigArrayFactory = require(configArrayFactoryPath).ConfigArrayFactory;\r\n\r\nif (!ConfigArrayFactory.__patched) {\r\n  ConfigArrayFactory.__patched = true;\r\n\r\n  const moduleResolverPath = path.join(eslintFolder, 'lib/shared/relative-module-resolver');\r\n  const ModuleResolver = require(moduleResolverPath);\r\n\r\n  const originalLoadPlugin = ConfigArrayFactory.prototype._loadPlugin;\r\n\r\n  if (eslintMajorVersion === 6) {\r\n    // ESLint 6.x\r\n    ConfigArrayFactory.prototype._loadPlugin = function (name, importerPath, importerName) {\r\n      const originalResolve = ModuleResolver.resolve;\r\n      try {\r\n        ModuleResolver.resolve = function (moduleName, relativeToPath) {\r\n          // resolve using importerPath instead of relativeToPath\r\n          return originalResolve.call(this, moduleName, importerPath);\r\n        };\r\n        return originalLoadPlugin.apply(this, arguments);\r\n      } finally {\r\n        ModuleResolver.resolve = originalResolve;\r\n      }\r\n    };\r\n  } else {\r\n    // ESLint 7.x\r\n    ConfigArrayFactory.prototype._loadPlugin = function (name, ctx) {\r\n      const originalResolve = ModuleResolver.resolve;\r\n      try {\r\n        ModuleResolver.resolve = function (moduleName, relativeToPath) {\r\n          // resolve using ctx.filePath instead of relativeToPath\r\n          return originalResolve.call(this, moduleName, ctx.filePath);\r\n        };\r\n        return originalLoadPlugin.apply(this, arguments);\r\n      } finally {\r\n        ModuleResolver.resolve = originalResolve;\r\n      }\r\n    };\r\n  }\r\n}\r\n"]}