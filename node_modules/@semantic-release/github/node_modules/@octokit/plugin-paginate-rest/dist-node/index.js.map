{"version":3,"file":"index.js","sources":["../dist-src/version.js","../dist-src/normalize-paginated-list-response.js","../dist-src/iterator.js","../dist-src/paginate.js","../dist-src/index.js"],"sourcesContent":["export const VERSION = \"2.0.2\";\n","/**\n * Some “list” response that can be paginated have a different response structure\n *\n * They have a `total_count` key in the response (search also has `incomplete_results`,\n * /installation/repositories also has `repository_selection`), as well as a key with\n * the list of the items which name varies from endpoint to endpoint.\n *\n * Octokit normalizes these responses so that paginated results are always returned following\n * the same structure. One challenge is that if the list response has only one page, no Link\n * header is provided, so this header alone is not sufficient to check wether a response is\n * paginated or not.\n *\n * We check if a \"total_count\" key is present in the response data, but also make sure that\n * a \"url\" property is not, as the \"Get the combined status for a specific ref\" endpoint would\n * otherwise match: https://developer.github.com/v3/repos/statuses/#get-the-combined-status-for-a-specific-ref\n */\nexport function normalizePaginatedListResponse(octokit, url, response) {\n    const responseNeedsNormalization = \"total_count\" in response.data && !(\"url\" in response.data);\n    if (!responseNeedsNormalization)\n        return;\n    // keep the additional properties intact as there is currently no other way\n    // to retrieve the same information.\n    const incompleteResults = response.data.incomplete_results;\n    const repositorySelection = response.data.repository_selection;\n    const totalCount = response.data.total_count;\n    delete response.data.incomplete_results;\n    delete response.data.repository_selection;\n    delete response.data.total_count;\n    const namespaceKey = Object.keys(response.data)[0];\n    const data = response.data[namespaceKey];\n    response.data = data;\n    if (typeof incompleteResults !== \"undefined\") {\n        response.data.incomplete_results = incompleteResults;\n    }\n    if (typeof repositorySelection !== \"undefined\") {\n        response.data.repository_selection = repositorySelection;\n    }\n    response.data.total_count = totalCount;\n}\n","import { normalizePaginatedListResponse } from \"./normalize-paginated-list-response\";\nexport function iterator(octokit, route, parameters) {\n    const options = octokit.request.endpoint(route, parameters);\n    const method = options.method;\n    const headers = options.headers;\n    let url = options.url;\n    return {\n        [Symbol.asyncIterator]: () => ({\n            next() {\n                if (!url) {\n                    return Promise.resolve({ done: true });\n                }\n                return octokit\n                    .request({ method, url, headers })\n                    .then((response) => {\n                    normalizePaginatedListResponse(octokit, url, response);\n                    // `response.headers.link` format:\n                    // '<https://api.github.com/users/aseemk/followers?page=2>; rel=\"next\", <https://api.github.com/users/aseemk/followers?page=2>; rel=\"last\"'\n                    // sets `url` to undefined if \"next\" URL is not present or `link` header is not set\n                    url = ((response.headers.link || \"\").match(/<([^>]+)>;\\s*rel=\"next\"/) || [])[1];\n                    return { value: response };\n                });\n            }\n        })\n    };\n}\n","import { iterator } from \"./iterator\";\nexport function paginate(octokit, route, parameters, mapFn) {\n    if (typeof parameters === \"function\") {\n        mapFn = parameters;\n        parameters = undefined;\n    }\n    return gather(octokit, [], iterator(octokit, route, parameters)[Symbol.asyncIterator](), mapFn);\n}\nfunction gather(octokit, results, iterator, mapFn) {\n    return iterator.next().then(result => {\n        if (result.done) {\n            return results;\n        }\n        let earlyExit = false;\n        function done() {\n            earlyExit = true;\n        }\n        results = results.concat(mapFn ? mapFn(result.value, done) : result.value.data);\n        if (earlyExit) {\n            return results;\n        }\n        return gather(octokit, results, iterator, mapFn);\n    });\n}\n","import { VERSION } from \"./version\";\nimport { paginate } from \"./paginate\";\nimport { iterator } from \"./iterator\";\n/**\n * @param octokit Octokit instance\n * @param options Options passed to Octokit constructor\n */\nexport function paginateRest(octokit) {\n    return {\n        paginate: Object.assign(paginate.bind(null, octokit), {\n            iterator: iterator.bind(null, octokit)\n        })\n    };\n}\npaginateRest.VERSION = VERSION;\n"],"names":["VERSION","normalizePaginatedListResponse","octokit","url","response","responseNeedsNormalization","data","incompleteResults","incomplete_results","repositorySelection","repository_selection","totalCount","total_count","namespaceKey","Object","keys","iterator","route","parameters","options","request","endpoint","method","headers","Symbol","asyncIterator","next","Promise","resolve","done","then","link","match","value","paginate","mapFn","undefined","gather","results","result","earlyExit","concat","paginateRest","assign","bind"],"mappings":";;;;AAAO,MAAMA,OAAO,GAAG,mBAAhB;;ACAP;;;;;;;;;;;;;;;;AAgBA,AAAO,SAASC,8BAAT,CAAwCC,OAAxC,EAAiDC,GAAjD,EAAsDC,QAAtD,EAAgE;AACnE,QAAMC,0BAA0B,GAAG,iBAAiBD,QAAQ,CAACE,IAA1B,IAAkC,EAAE,SAASF,QAAQ,CAACE,IAApB,CAArE;AACA,MAAI,CAACD,0BAAL,EACI,OAH+D;AAKnE;;AACA,QAAME,iBAAiB,GAAGH,QAAQ,CAACE,IAAT,CAAcE,kBAAxC;AACA,QAAMC,mBAAmB,GAAGL,QAAQ,CAACE,IAAT,CAAcI,oBAA1C;AACA,QAAMC,UAAU,GAAGP,QAAQ,CAACE,IAAT,CAAcM,WAAjC;AACA,SAAOR,QAAQ,CAACE,IAAT,CAAcE,kBAArB;AACA,SAAOJ,QAAQ,CAACE,IAAT,CAAcI,oBAArB;AACA,SAAON,QAAQ,CAACE,IAAT,CAAcM,WAArB;AACA,QAAMC,YAAY,GAAGC,MAAM,CAACC,IAAP,CAAYX,QAAQ,CAACE,IAArB,EAA2B,CAA3B,CAArB;AACA,QAAMA,IAAI,GAAGF,QAAQ,CAACE,IAAT,CAAcO,YAAd,CAAb;AACAT,EAAAA,QAAQ,CAACE,IAAT,GAAgBA,IAAhB;;AACA,MAAI,OAAOC,iBAAP,KAA6B,WAAjC,EAA8C;AAC1CH,IAAAA,QAAQ,CAACE,IAAT,CAAcE,kBAAd,GAAmCD,iBAAnC;AACH;;AACD,MAAI,OAAOE,mBAAP,KAA+B,WAAnC,EAAgD;AAC5CL,IAAAA,QAAQ,CAACE,IAAT,CAAcI,oBAAd,GAAqCD,mBAArC;AACH;;AACDL,EAAAA,QAAQ,CAACE,IAAT,CAAcM,WAAd,GAA4BD,UAA5B;AACH;;ACrCM,SAASK,QAAT,CAAkBd,OAAlB,EAA2Be,KAA3B,EAAkCC,UAAlC,EAA8C;AACjD,QAAMC,OAAO,GAAGjB,OAAO,CAACkB,OAAR,CAAgBC,QAAhB,CAAyBJ,KAAzB,EAAgCC,UAAhC,CAAhB;AACA,QAAMI,MAAM,GAAGH,OAAO,CAACG,MAAvB;AACA,QAAMC,OAAO,GAAGJ,OAAO,CAACI,OAAxB;AACA,MAAIpB,GAAG,GAAGgB,OAAO,CAAChB,GAAlB;AACA,SAAO;AACH,KAACqB,MAAM,CAACC,aAAR,GAAwB,OAAO;AAC3BC,MAAAA,IAAI,GAAG;AACH,YAAI,CAACvB,GAAL,EAAU;AACN,iBAAOwB,OAAO,CAACC,OAAR,CAAgB;AAAEC,YAAAA,IAAI,EAAE;AAAR,WAAhB,CAAP;AACH;;AACD,eAAO3B,OAAO,CACTkB,OADE,CACM;AAAEE,UAAAA,MAAF;AAAUnB,UAAAA,GAAV;AAAeoB,UAAAA;AAAf,SADN,EAEFO,IAFE,CAEI1B,QAAD,IAAc;AACpBH,UAAAA,8BAA8B,CAACC,OAAD,EAAUC,GAAV,EAAeC,QAAf,CAA9B,CADoB;AAGpB;AACA;;AACAD,UAAAA,GAAG,GAAG,CAAC,CAACC,QAAQ,CAACmB,OAAT,CAAiBQ,IAAjB,IAAyB,EAA1B,EAA8BC,KAA9B,CAAoC,yBAApC,KAAkE,EAAnE,EAAuE,CAAvE,CAAN;AACA,iBAAO;AAAEC,YAAAA,KAAK,EAAE7B;AAAT,WAAP;AACH,SATM,CAAP;AAUH;;AAf0B,KAAP;AADrB,GAAP;AAmBH;;ACxBM,SAAS8B,QAAT,CAAkBhC,OAAlB,EAA2Be,KAA3B,EAAkCC,UAAlC,EAA8CiB,KAA9C,EAAqD;AACxD,MAAI,OAAOjB,UAAP,KAAsB,UAA1B,EAAsC;AAClCiB,IAAAA,KAAK,GAAGjB,UAAR;AACAA,IAAAA,UAAU,GAAGkB,SAAb;AACH;;AACD,SAAOC,MAAM,CAACnC,OAAD,EAAU,EAAV,EAAcc,QAAQ,CAACd,OAAD,EAAUe,KAAV,EAAiBC,UAAjB,CAAR,CAAqCM,MAAM,CAACC,aAA5C,GAAd,EAA4EU,KAA5E,CAAb;AACH;;AACD,SAASE,MAAT,CAAgBnC,OAAhB,EAAyBoC,OAAzB,EAAkCtB,QAAlC,EAA4CmB,KAA5C,EAAmD;AAC/C,SAAOnB,QAAQ,CAACU,IAAT,GAAgBI,IAAhB,CAAqBS,MAAM,IAAI;AAClC,QAAIA,MAAM,CAACV,IAAX,EAAiB;AACb,aAAOS,OAAP;AACH;;AACD,QAAIE,SAAS,GAAG,KAAhB;;AACA,aAASX,IAAT,GAAgB;AACZW,MAAAA,SAAS,GAAG,IAAZ;AACH;;AACDF,IAAAA,OAAO,GAAGA,OAAO,CAACG,MAAR,CAAeN,KAAK,GAAGA,KAAK,CAACI,MAAM,CAACN,KAAR,EAAeJ,IAAf,CAAR,GAA+BU,MAAM,CAACN,KAAP,CAAa3B,IAAhE,CAAV;;AACA,QAAIkC,SAAJ,EAAe;AACX,aAAOF,OAAP;AACH;;AACD,WAAOD,MAAM,CAACnC,OAAD,EAAUoC,OAAV,EAAmBtB,QAAnB,EAA6BmB,KAA7B,CAAb;AACH,GAbM,CAAP;AAcH;;ACpBD;;;;;AAIA,AAAO,SAASO,YAAT,CAAsBxC,OAAtB,EAA+B;AAClC,SAAO;AACHgC,IAAAA,QAAQ,EAAEpB,MAAM,CAAC6B,MAAP,CAAcT,QAAQ,CAACU,IAAT,CAAc,IAAd,EAAoB1C,OAApB,CAAd,EAA4C;AAClDc,MAAAA,QAAQ,EAAEA,QAAQ,CAAC4B,IAAT,CAAc,IAAd,EAAoB1C,OAApB;AADwC,KAA5C;AADP,GAAP;AAKH;AACDwC,YAAY,CAAC1C,OAAb,GAAuBA,OAAvB;;;;"}